<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="${resultMap}" type="${package.Entity}.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
    <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

#end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.commonFields})
    #if(${field.name} == ${field.propertyName})${field.name}#else${field.name} AS ${field.propertyName}#end,
#end
        ${table.fieldNames}
    </sql>
#end

    <!-- insertSelective -->
    <insert id="insertSelective" parameterType="${package.Entity}.${entity}" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into ${table.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                ${field.name},
            </if>
            #end
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                #{${field.propertyName}},
            </if>
            #end
        </trim>
    </insert>

    <!-- updateSelectiveById -->
    <update id="updateSelectiveById" parameterType="${package.Entity}.${entity}">
        update ${table.name}
        <trim prefix="set" suffixOverrides=",">
            #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                ${field.name} = #{${field.propertyName}},
            </if>
             #end
         </trim>
         where id = #{id}
    </update>

    <!-- insertOrUpdate -->
    <insert id="insertOrUpdate" parameterType="${package.Entity}.${entity}">
        insert into ${table.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
        #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                ${field.name},
            </if>
        #end
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
        #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                #{${field.propertyName}},
            </if>
        #end
        </trim>
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
        #foreach($field in ${table.fields})
            <if test="${field.propertyName} != null">
                ${field.name} = #{${field.propertyName}},
            </if>
        #end
        </trim>
    </insert>

</mapper>
